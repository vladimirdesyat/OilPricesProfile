// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OilPricesProfile.Data.Context;

#nullable disable

namespace OilPricesProfile.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230928110436_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OilDepot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("OilDepots");
                });

            modelBuilder.Entity("PetroleumProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("PetroleumProducts");
                });

            modelBuilder.Entity("Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("MaxPricePerTonInclVat")
                        .HasColumnType("float");

                    b.Property<double?>("MinPricePerTonInclVat")
                        .HasColumnType("float");

                    b.Property<int>("OilDepotId")
                        .HasColumnType("int");

                    b.Property<int>("PetroleumProductId")
                        .HasColumnType("int");

                    b.Property<double?>("WeightedAverageIndexPerTonInclVat")
                        .HasColumnType("float");

                    b.Property<double?>("WeightedAveragePricePerTonInclVat")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OilDepotId");

                    b.HasIndex("PetroleumProductId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("Price", b =>
                {
                    b.HasOne("OilDepot", "OilDepot")
                        .WithMany()
                        .HasForeignKey("OilDepotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetroleumProduct", "PetroleumProduct")
                        .WithMany()
                        .HasForeignKey("PetroleumProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OilDepot");

                    b.Navigation("PetroleumProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
